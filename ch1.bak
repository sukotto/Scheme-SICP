#lang racket
(define (square x)(* x x))

(define (sum-of-squares x y)
  (+ (square x) (square y)))

;;Exercise 1.3 Define a procedure that takes 3 numbers 
;;and returns the sum of squares of the 2 larger numbers
(define (sum-squares-larger x y z)
  (cond [(= x (min x y z)) (sum-of-squares y z)]
        [(= y (min x y z)) (sum-of-squares x z)]
        [(= z (min x y z)) (sum-of-squares x y)]
        [else "Error: wrong input for sum-squares-larger"]))
  